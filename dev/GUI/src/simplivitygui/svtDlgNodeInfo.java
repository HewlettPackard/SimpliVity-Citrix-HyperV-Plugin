/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package simplivitygui;

/**
 *
 * @author johnbrit
 */
public class svtDlgNodeInfo extends javax.swing.JDialog {

    /**
     * Creates new form svtDlgNodeInfo
     */
    public svtDlgNodeInfo(java.awt.Frame parent, boolean modal, 
                          svtBaseFrame pParent, short isConfPlugin) {
        super(parent, modal);
        initComponents();
        objFileUtil.makeMeCentred(this);
        this.mIsConfPlugin = isConfPlugin;
        this.mObjBaseFrame = pParent;
    }

    /**
     * This method is called from within the constructor to initialize the form. WARNING: Do NOT
     * modify this code. The content of this method is always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        pnlDlgNodeInfo = new javax.swing.JPanel();
        txtOvcIP = new javax.swing.JFormattedTextField();
        lblOvcIP = new javax.swing.JLabel();
        lblOvcUserId = new javax.swing.JLabel();
        txtOvcUserId = new javax.swing.JTextField();
        lblOvcPasswd = new javax.swing.JLabel();
        lblScVmmIP = new javax.swing.JLabel();
        txtScVmmIP = new javax.swing.JFormattedTextField();
        btnOK = new javax.swing.JButton();
        btnCancel = new javax.swing.JButton();
        txtOvcPasswd = new javax.swing.JPasswordField();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        pnlDlgNodeInfo.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Node Information", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Dialog", 1, 12))); // NOI18N

        /*
        try {
            txtOvcIP.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("###.###.###.###")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        */

        lblOvcIP.setFont(new java.awt.Font("Latin Modern Sans Quotation", 1, 13)); // NOI18N
        lblOvcIP.setText("OVC IP *");

        lblOvcUserId.setFont(new java.awt.Font("Latin Modern Sans Quotation", 1, 13)); // NOI18N
        lblOvcUserId.setText("OVC User ID *");

        lblOvcPasswd.setFont(new java.awt.Font("Latin Modern Sans Quotation", 1, 13)); // NOI18N
        lblOvcPasswd.setText("OVC Password *");

        lblScVmmIP.setFont(new java.awt.Font("Latin Modern Sans Quotation", 1, 13)); // NOI18N
        lblScVmmIP.setText("ScVMM IP * ");

        /*
        try {
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        txtScVmmIP.setCursor(new java.awt.Cursor(java.awt.Cursor.TEXT_CURSOR));
        txtScVmmIP.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtScVmmIPActionPerformed(evt);
            }
        });
        */

        btnOK.setFont(new java.awt.Font("Latin Modern Sans Quotation", 1, 13)); // NOI18N
        btnOK.setText("OK");
        btnOK.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnOKActionPerformed(evt);
            }
        });

        btnCancel.setFont(new java.awt.Font("Latin Modern Sans Quotation", 1, 13)); // NOI18N
        btnCancel.setText("Cancel");
        btnCancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pnlDlgNodeInfoLayout = new javax.swing.GroupLayout(pnlDlgNodeInfo);
        pnlDlgNodeInfo.setLayout(pnlDlgNodeInfoLayout);
        pnlDlgNodeInfoLayout.setHorizontalGroup(
            pnlDlgNodeInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlDlgNodeInfoLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlDlgNodeInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(pnlDlgNodeInfoLayout.createSequentialGroup()
                        .addComponent(btnOK, javax.swing.GroupLayout.PREFERRED_SIZE, 178, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnCancel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(pnlDlgNodeInfoLayout.createSequentialGroup()
                        .addGroup(pnlDlgNodeInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(pnlDlgNodeInfoLayout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addComponent(lblOvcIP))
                            .addGroup(pnlDlgNodeInfoLayout.createSequentialGroup()
                                .addGroup(pnlDlgNodeInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(lblScVmmIP)
                                    .addComponent(lblOvcPasswd)
                                    .addComponent(lblOvcUserId))
                                .addGap(0, 0, Short.MAX_VALUE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(pnlDlgNodeInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(txtOvcUserId, javax.swing.GroupLayout.PREFERRED_SIZE, 234, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtOvcPasswd, javax.swing.GroupLayout.PREFERRED_SIZE, 234, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtOvcIP, javax.swing.GroupLayout.PREFERRED_SIZE, 234, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtScVmmIP, javax.swing.GroupLayout.PREFERRED_SIZE, 234, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap())
        );
        pnlDlgNodeInfoLayout.setVerticalGroup(
            pnlDlgNodeInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlDlgNodeInfoLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlDlgNodeInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtOvcIP, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblOvcIP))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(pnlDlgNodeInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtOvcUserId, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblOvcUserId))
                .addGap(7, 7, 7)
                .addGroup(pnlDlgNodeInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtOvcPasswd, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblOvcPasswd))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(pnlDlgNodeInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtScVmmIP, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblScVmmIP, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 17, Short.MAX_VALUE)
                .addGroup(pnlDlgNodeInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnOK, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnCancel))
                .addContainerGap())
        );

        pnlDlgNodeInfoLayout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {btnCancel, btnOK});

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(pnlDlgNodeInfo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(pnlDlgNodeInfo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    
    // just accept string variable and display it in the message dialog
    // along with appropriate Type.
    private void displayMessage(String sMsg, int nType) {
        javax.swing.JOptionPane.showMessageDialog(this, sMsg, 
                      "SimpliVity Citrix Cloud Plugin", nType);
        return;
    }
    
    private short isValidToProceed() {
        // Need to validate the following
        // OvcIPAddress
        // OvcUserId
        // OvcPassword
        // ScVMM IP -> Not mandatory / keep it to have same look and feel like
        //              VMware GUI
        controlText[0]  = txtOvcIP;     // OVC IP
        controlText[1]  = txtOvcUserId; // OVC UserID
        controlText[2]  = txtOvcPasswd; // OVC Password
        controlText[3]  = txtScVmmIP;   // ScVmm IP/hostname
        
        for( int ix = 0; ix < 4; ix++ ){
            if(controlText[ix].getText().isEmpty() == true)
                return -1;
        }
        String text = txtOvcIP.getText();
        java.util.StringTokenizer st = new java.util.StringTokenizer(text, ".");
        while (st.hasMoreTokens()) {
           int value = Integer.parseInt((String) st.nextToken().trim());
           if (value < 0 || value > 255) {
             /*
               displayMessage("IPAddress Format Error",
                            javax.swing.JOptionPane.ERROR_MESSAGE);
              */ 
              return 0;
            }
        }   
        return 1;
    }
    
    private void btnOKActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnOKActionPerformed
        
        // We need to validate whether all the required details are
        // entered by the end user. If any variable is missing then we
        // may need to alert the user that mandatory parameters cannot be
        // null
        /*
        if(isValidToProceed() == false) {
            displayMessage("Required(*) fields cannot be empty", 
                            javax.swing.JOptionPane.ERROR_MESSAGE);
            return;
        }
        */
        switch(isValidToProceed()){
            case -1:
                displayMessage("Required(*) fields cannot be empty", 
                            javax.swing.JOptionPane.ERROR_MESSAGE);
                return;
                //break;
            case 0:
                displayMessage("IP Address Format Error", 
                            javax.swing.JOptionPane.ERROR_MESSAGE);
                return;
                //break;
            case 1:
                // proceed further
                break;
            default:
                break;
        }
        
        objFileUtil.setScVmmmIPAddress(txtScVmmIP.getText().replaceAll("\\s+",""));
        if (!objFileUtil.serverListening()) {
            displayMessage("SCVMM Host is not accessible, check and retry", 
                            javax.swing.JOptionPane.ERROR_MESSAGE);
                return;
        }
        
        objFileUtil.logMessage(0,"OVC Basic validation passed.");
        // We need to set all these values to FileUtil object
        // so that we can use the same later
        objFileUtil.setOvcIPAddress(txtOvcIP.getText().replaceAll("\\s+",""));
        objFileUtil.setOvcPassword(txtOvcPasswd.getText());
        objFileUtil.setOvcUserId(txtOvcUserId.getText());
        
        
        // New REST API
        if (!objFileUtil.readSvTInfo()) {
            displayMessage("Error in reading Simplivity details. Check the login details and retry", 
                            javax.swing.JOptionPane.ERROR_MESSAGE);
            return;
        }
        // We also need to connect to the respective OVC IP and 
        // try creating the REST Host, if we are successful proceed further
        // if not just send back a message saying we cannot proceed further at this
        // point - how about doing that?
        
        // PLEASE DO NOT REMOVE
        // we need to wipe-out the references from the memory 
        this.dispose();
        
        // if everything goes well, we need to call repective object
        // to show it to the end user
        // mIsConfPlugin - 1  - Configuration Plugin
        //               - 0 - DeConfiguration Plugin
        switch (mIsConfPlugin){
            case 0: /* calling deconfiguration plugin object */
                new svtDeConfPlugin(mObjBaseFrame).show(true);
            break;
            case 1: /* calling configuration plugin object */
                new svtConfPlugin(mObjBaseFrame).show(true);
            break;
            default:
                /* intensional */
                break;
        }
    }//GEN-LAST:event_btnOKActionPerformed

    private void btnCancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelActionPerformed
        // if there is a cancel operation, then we need to show the 
        // parent window, because we need OVC information for proceeding
        // further.
        this.dispose();
        mObjBaseFrame.setVisible(true);
    }//GEN-LAST:event_btnCancelActionPerformed

    private void txtScVmmIPActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtScVmmIPActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtScVmmIPActionPerformed

    private svtFileUtil objFileUtil = svtFileUtil.getInstance();
    // always configuration plugin
    private short mIsConfPlugin = 1;
    // Control Text
    javax.swing.JTextField[] controlText = new javax.swing.JTextField[4];
    // corresponding control values from FileUtil object
    String[] controlValues = new String[4];
    // BaseFrame Object
    private svtBaseFrame mObjBaseFrame = null;
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCancel;
    private javax.swing.JButton btnOK;
    private javax.swing.JLabel lblOvcIP;
    private javax.swing.JLabel lblOvcPasswd;
    private javax.swing.JLabel lblOvcUserId;
    private javax.swing.JLabel lblScVmmIP;
    private javax.swing.JPanel pnlDlgNodeInfo;
    private javax.swing.JFormattedTextField txtOvcIP;
    private javax.swing.JPasswordField txtOvcPasswd;
    private javax.swing.JTextField txtOvcUserId;
    private javax.swing.JFormattedTextField txtScVmmIP;
    // End of variables declaration//GEN-END:variables
}
